/* For this project, I downloaded Spotify data from Kaggle.
Then I created a table to insert Spotify data into.
Finally, I performed analytics on the data using SQL. */

/* Creating the table: */
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

/* Then I inserted the Spotify Data .csv into the table. */

/* Next, I explored the data using the following SQL. */

/* First I determined the top 10 artists by popularity */
SELECT s.artist_name, s.track_name, s.popularity
    FROM BIT_DB.Spotifydata s
    ORDER BY s.popularity DESC
    LIMIT 10;

/* Next I determined the 10 longest songs in milliseconds */   
SELECT s.artist_name, s.track_name, s.duration_ms
    FROM BIT_DB.Spotifydata s
    ORDER BY s.duration_ms DESC
    LIMIT 10;
    
/* Finally I determined the average popularity and danceability of the top artist */
SELECT s.artist_name, AVG(s.popularity), AVG(s.danceability)
    FROM BIT_DB.spotifydata s
    WHERE s.artist_name = 'Olivia Rodrigo';
    
/* Calculate the average popularity for the artists in the Spotfiy data table. Then, for every artst with an average popularity of 90 or above, show their name, their average popularity, and label them as a "Top Star". */
SELECT artist_name, avg(popularity)
    FROM BIT_DB.spotifydata
    GROUP BY artist_name;
    
WITH temptable AS (
    SELECT artist_name, avg(popularity) AS avg_popularity
    FROM Spotifydata
    GROUP BY artist_name
)
SELECT artist_name, avg_popularity, 'Top Star' AS tag
    FROM temptable 
    WHERE avg_popularity >=90;
    
